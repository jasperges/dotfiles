#!/bin/bash
# Gives a dmenu prompt to mount unmounted drives.
# If they're in /etc/fstab, they'll be mounted automatically.
# Otherwise, you'll be prompted to give a mountpoint from already existsing directories.
# If you input a novel directory, it will prompt you to create that directory.

getmount() { \
	[ -z "$chosen" ] && exit 1
	mp="$(find $1 2>/dev/null | rofi -dmenu -l 5 -i -p "Type in mount point.")"
	[ "$mp" = "" ] && exit 1
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "No\\nYes" | rofi -dmenu -l 5 -i -p "$mp does not exist. Create it?")
		[ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
	fi
	}

mountusb() { \
	chosen="$(echo "$usbdrives" | rofi -dmenu -l 5 -i -p "Mount which drive?" | awk '{print $1}')"
	sudo -A mount "$chosen" 2>/dev/null && notify-send "ðŸ’» USB mounting" "$chosen mounted." && exit 0
	alreadymounted=$(lsblk -nrpo "name,type,mountpoint" | awk '$2=="part"&&$3!~/\/boot|\/home$|SWAP/&&length($3)>1{printf "-not \\( -path \\"*%s\\" -prune \\) \\ \n",$3}')
	# getmount "/mnt /media /mount /home -maxdepth 5 -type d $alreadymounted"
	getmount "/media -maxdepth 5 -type d $alreadymounted"
	partitiontype="$(lsblk -no "fstype" "$chosen")"
	case "$partitiontype" in
		"vfat") sudo -A mount -t vfat "$chosen" "$mp" -o rw,umask=0000;;
        "exfat") sudo -A mount -t exfat "$chosen" "$mp" -o rw,umask=0000;;
		*) sudo -A mount "$chosen" "$mp"; user="$(whoami)"; ug="$(groups | awk '{print $1}')"; sudo -A chown "$user":"$ug" "$mp";;
	esac
    [ $? -eq 0 ] && notify-send "ðŸ’» USB mounting" "$chosen mounted to $mp." && exit
    notify-send -u critical "ðŸ’» USB mounting" "Failed to mount $chosen to $mp." && exit 1
	}

mountandroid() { \
	chosen=$(echo "$anddrives" | rofi -dmenu -l 5 -i -p "Which Android device?" | cut -d : -f 1)
	getmount "/media -maxdepth 3 -type d"
	simple-mtpfs --device "$chosen" "$mp" && notify-send "ï˜  Android Mounting" "Android device mounted to $mp." && exit
    notify-send -u critical "ï˜  Android Mounting" "Failed to mount Android device to $mp." && exit 1
	}

mountios() { \
	# chosen=$(echo "$iosdrives" | rofi -dmenu -l 5 -i -p "Which iOS device?" | cut -d : -f 1)
	# getmount "/media -maxdepth 3 -type d -iname ip*"
    mp=/media/foonjappie
	ifuse "$mp" && notify-send "ï˜  iOS Mounting" "foonjappie mounted to $mp." && exit
    notify-send -u critical "ï˜  iOS Mounting" "Failed to mount foonjappie to $mp." && exit 1
}

asktype() { \
	case "$(printf "%s\n" ${choices[@]} | rofi -dmenu -l 5 -i -p "Mount a USB drive iOS device?")" in
		USB) mountusb ;;
		Android) mountandroid ;;
        iOS) mountios ;;
	esac
	}

anddrives=$(simple-mtpfs -l 2>/dev/null)
iosdrives=$(idevicename 2>/dev/null)
usbdrives="$(lsblk -rpo "name,type,size,hotplug,mountpoint" | awk '$2=="part"&&$4=="1"&&$5==""{printf "%s (%s)\n",$1,$3}')"
choices=()
choices+=($([ "$usbdrives" ] && echo "USB"))
choices+=($([ "$iosdrives" ] && echo "iOS"))
choices+=($([ "$anddrives" ] && echo "Android"))

[ ${#choices[@]} -eq 0 ] && echo "No mountable drives or devices detected." && exit
echo "Mountable drives/devices detected."
[ ${#choices[@]} -gt 1 ] && asktype
case ${choices[0]} in
    USB) mountusb ;;
    iOS) mountios ;;
    Android) mountandroid ;;
esac
