#!/bin/bash

# NOTE: Using nmcli, because that also works at home, while openvpn itself doesn't.
# TODO: auto select the first row with an active vpn in a cleaner way
# TODO: sort by most used

# Get a list of available VPN connections
readarray -t vpnlist < <(nmcli --terse --fields NAME,STATE,TYPE c show | grep "vpn$" | sort | uniq -u)

# Connect to a given VPN service if it's provided and it exists
for vpn in ${vpnlist[@]}; do
    if [[ $1 == $(echo $vpn | cut -d : -f 1) ]]; then
        nmcli connection up $1 passwd-file $HOME/.vpnrc && \
            pgrep -u $UID -x polybar && echo "hook:module/vpn-status1" >> /tmp/ipc-topbar; \
            pkill -RTMIN+10 dwmblocks; \
            exit 0
    fi
done

# If no VPN service was given or it doesn't exist, show available choices

## ROFI
# vpnidx="$(printf '%s\n' "${vpnlist[@]}" | \
#     sed -e 's/^\(.*\):activated:vpn/<span foreground="#1db954" font_weight="bold"><\/span> <span font_weight="bold">\1<\/span>/' \
#     -e 's/^\(.*\):.*:vpn/<span foreground="#bd2c40"> <\/span> \1/' | \
#     rofi -dmenu -lines 7 -p "Toggle VPN connection" -i -markup-rows \
#     -select "font_weight" -format i)"
# [[ "$vpnidx" ]] || exit

# vpn="${vpnlist[vpnidx]}"
# vpnstatus=$(echo "$vpn" | cut -d : -f 2)
# vpnconnection=$(echo "$vpn" | cut -d : -f 1)

vpn="$(printf "%s\n" "${vpnlist[@]}" \
    | awk -F: '{if ($2 == "activated") {printf " %s\n", $1} else {printf " %s\n", $1}}' \
    | sort | dmenu -p "Toggle VPN connection" -l ${#vpnlist[@]} -i -r | cut -d " " -f 2)"
[[ -z "$vpn" ]] && exit
vpnstatus="$(printf "%s\n" "${vpnlist[@]}" | awk -F ':' '/'"$vpn"'/ {printf $2}')"

case "$vpnstatus" in
    "activated")
        nmcli connection down "$vpn" \
            && notify-send " VPN Connection" "Disconnected $vpn" \
            || notify-send -u critical " VPN Connection" "Failed to disconnect $vpn"
        ;;
    *)
        nmcli connection up "$vpn" passwd-file $HOME/.vpnrc \
            && notify-send " VPN Connection" "Connected to $vpn" \
            || notify-send -u critical " VPN Connection" "Failed to connect to $vpn"
        ;;
esac

pgrep -u $UID -x polybar && echo "hook:module/vpn-status1" >> /tmp/ipc-topbar
pkill -RTMIN+10 dwmblocks
