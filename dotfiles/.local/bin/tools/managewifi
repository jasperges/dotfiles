#!/bin/bash

# Get all known wifi connections and if they are activated.
# Don't do a scan and list all available networks. I rarely need to connect to
# a new network, so I prefer to add these manually.
# List them with rofi and show them in a different color when they are active.

# TODO: only list available networks. Compare the known ones to the ones
#       retrieved with `nmcli d wifi list --rescan yes`?
# TODO: sort by most used

readarray -t wifilist < <(nmcli --terse --fields NAME,STATE,TYPE c show | grep "wireless$" | sort | uniq -u)

# ROFI
# wifiidx="$(printf '%s\n' "${wifilist[@]}" | \
#     sed -Ee 's/^(.*):activated:.*wireless$/<span foreground="#1db954" font_weight="bold">直<\/span> <span font_weight="bold">\1<\/span>/' \
#     -Ee 's/^(.*)::.*wireless$/<span foreground="#bd2c40">睊<\/span> \1/' | \
#     rofi -dmenu -lines 5 -p "Choose WiFi connection" -i -markup-rows \
#     -select "font_weight" -format i)"
# [[ "$wifiidx" ]] || exit

# wifi="${wifilist[wifiidx]}"

wifi="$(printf "%s\n" "${wifilist[@]}" \
    | awk -F: '{if ($2 == "activated") {printf " %s\n", $1} else {printf "  %s\n", $1}}' \
    | sort | dmenu -p "Toggle WiFi connection" -l ${#wifilist[@]} -i -r | cut -d " " -f 2-)"
[[ -z "$wifi" ]] && exit
wifistatus="$(printf "%s\n" "${wifilist[@]}" | awk -F ':' '/'"$wifi"'/ {printf $2}')"

nmcli c up "$wifi"
case "$wifistatus" in
    "activated")
        nmcli connection down "$wifi" \
            && notify-send " wifi Connection" "Disconnected $wifi" \
            || notify-send -u critical "X wifi Connection" "Failed to disconnect $wifi"
        ;;
    *)
        nmcli connection up "$wifi" \
            && notify-send " wifi Connection" "Connected to $wifi" \
            || notify-send -u critical "X wifi Connection" "Failed to connect to $wifi"
        ;;
esac

pgrep -u $UID -x polybar && echo "hook:module/wifi-status1" >> /tmp/ipc-topbar
pkill -RTMIN+9 dwmblocks
