#!/bin/bash

wm=$(wmctrl -m | awk '/Name/ {printf $2}')

external_monitor=$(xrandr | sed -nE "s/^((DP|HDMI)-[0-9]+) connected.*$/\1/p")
internal_monitor=$(xrandr | sed -nE "s/^(LVDS-[0-9]+) connected.*$/\1/p")

if [[ -n $external_monitor ]]; then
    xrandr --output $external_monitor --auto --primary
    xrandr --output $internal_monitor --auto --right-of $external_monitor
    # TODO: move the interal monitor based on the actual resolutions of the monitors
    xrandr --output $internal_monitor --pos 2560x0
else
    xrandr --output $internal_monitor --auto --primary
    xrandr --output $internal_monitor --pos 0x0
    # TODO: get the resolution of the internal monitor
    xrandr --output $internal_monitor --mode 1680x1050 --pos 0x0 --panning 0x0
fi

# If the current wm in i3, restart it
[ $wm = "i3" ] && update_i3_config && i3 restart

feh --bg-fill $HOME/pictures/backgrounds/active_wallpaper
setxinputs 2>/dev/null

# Here you can execute specific things for the running window manager
case $wm in
    i3 )
        currentws=$(i3-msg -t get_workspaces | jq '.[] | select(.focused==true).name' | cut -d "\"" -f2)
        for wsnum in $(sed -nE "s/^set \\\$ws[0-9]+ \"([0-9]+)(: [a-z]+)?\"$/\1/p" $HOME/.config/i3/config); do
            i3-msg workspace number "$wsnum"
            wsoutput=$(sed -nE "s/^workspace \\\$ws$wsnum (output [A-Z]+-[0-9]+)$/\1/p" $HOME/.config/i3/config)
            i3-msg move workspace to "$wsoutput"
        done
        i3-msg workspace number "$currentws"
        ;;
esac
