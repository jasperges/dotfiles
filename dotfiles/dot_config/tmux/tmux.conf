# Configured by Rob Muhlestein (rwxrob.live)
# Updated by Jasper van Nieuwenhuizen
# This file is copyright free (public domain).

set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "sainnhe/tmux-fzf"
set -g @plugin "jaclu/tmux-power-zoom"
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'omerxx/tmux-sessionx'

# change default meta key to same as screen
unbind C-b
unbind C-a
set -g prefix C-a

# Trigger power zoom with prefix + z
# unbind z
set -g @power_zoom_trigger z

# Automatically restore tmux environment when tmux starts
set -g @continuum-restore 'on'

set -g @sessionx-bind 'o'
set -g @sessionx-zoxide-mode 'on'

# Smart pane switching with awareness of Vim splits. Using C-M-{h,j,k,l}
# instead of C-{h,j,k,l}, because C-j interferes with ble.sh (add possibly
# other applications).
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-M-h' if-shell "$is_vim" 'send-keys C-M-h'  'select-pane -L'
bind-key -n 'C-M-j' if-shell "$is_vim" 'send-keys C-M-j'  'select-pane -D'
bind-key -n 'C-M-k' if-shell "$is_vim" 'send-keys C-M-k'  'select-pane -U'
bind-key -n 'C-M-l' if-shell "$is_vim" 'send-keys C-M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-M-\\' if-shell \"$is_vim\" 'send-keys C-M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-M-\\' if-shell \"$is_vim\" 'send-keys C-M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-M-h' select-pane -L
bind-key -T copy-mode-vi 'C-M-j' select-pane -D
bind-key -T copy-mode-vi 'C-M-k' select-pane -U
bind-key -T copy-mode-vi 'C-M-l' select-pane -R
bind-key -T copy-mode-vi 'C-M-\' select-pane -l

# form vim/tmux d/y buffer sync
set -g focus-events on

set -sg escape-time 10

# use a different prefix for nested
bind-key -n C-y send-prefix

# add double-tap meta key to toggle last window
bind-key C-a last-window

# move windows to the left or right
bind-key -n S-Left swap-window -d -t -1
bind-key -n S-Right swap-window -d -t +1

# pane colors and display

# create more intuitive split key combos (same as modern screen)
unbind |
bind | split-window -h -c "#{pane_current_path}"
bind '\' split-window -h -l 45% -c "#{pane_current_path}"
bind 'C-\' split-window -h -f -l 45% -c "#{pane_current_path}"
unbind -
bind - split-window -v -c "#{pane_current_path}"
unbind _
bind _ split-window -v -c "#{pane_current_path}"
bind C-_ split-window -v -f -c "#{pane_current_path}"

# vi for copy mode
setw -g mode-keys vi

# vi for command status
set -g status-keys vi

# vi keys to resize
bind -r C-k resize-pane -U 5
bind -r C-j resize-pane -D 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5
# toggle pane zoom (maximize)
bind -r C-m resize-pane -Z

# vi keys to navigate panes
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# avoid cursor movement messing with resize
set -g repeat-time 200

# colors, clock, and stuff
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*-256col*:RGB"
setw -g clock-mode-colour cyan
set -g base-index 1
setw -g pane-base-index 1

# color of the window selection background
set -g mode-style "bg=black"

# very unique Mac bug
if-shell "type 'reattach-to-user-namespace' >/dev/null" "set -g default-command 'reattach-to-user-namespace -l $SHELL'"

# reload configuration
bind -r r source-file ~/.tmux.conf

set -g status-style "bg=#002b36,fg=#859900"
set -g status-position top

# Automatically renumber windows when closing one
set -g renumber-windows on

set -g message-style "fg=red"

# enable status
set -g status on

# enable mouse mode (tmux 2.1 and above)
set -g mouse on

run "~/.tmux/plugins/tpm/tpm"
