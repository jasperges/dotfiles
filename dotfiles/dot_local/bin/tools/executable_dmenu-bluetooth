#!/bin/bash

powerstate() {
    controller="$(bluetoothctl list | grep "[default]" | cut -d" " -f2)"
    echo "$(bluetoothctl show "$controller" | grep "Powered" | cut -d" " -f2)"
}

toggle_bluetooth() {
    if [ "$(powerstate)" = "yes" ]; then
        newstate="off"
    else
        newstate="on"
    fi
    bluetoothctl power "$newstate"
}

# Get a list of the known bluetooth devices
readarray -t bluetoothdevices < <(bluetoothctl devices | sort | uniq -u)

idx=0
for device in "${bluetoothdevices[@]}"; do
    connected=$(bluetoothctl info "$(echo "$device" | cut -d " " -f 2)" | awk '/Connected/ {printf $2}')
    bluetoothdevices[$idx]="$device $connected"
    idx=$((idx + 1))
done

# Add extra option for launch blueman-manager
# bluetoothdevices+=("x x ----------")  # separator
bluetoothdevices+=("App xxx toggle-bluetooth $(powerstate)")
bluetoothdevices+=("App xxx blueman-manager")

# Show available choices (icons: üì± üéß Ôñ≤ üìü Û∞§Å)
deviceidx="$(printf '%s\n' "${bluetoothdevices[@]}" \
    | awk '{
    if($4=="yes")
        {print "<span foreground=\"#1db954\" font_weight=\"bold\">"$3"</span>";}
    else
        { print $3;}
    }' \
    | sed -r -e 's#((foon|phone).*)$#üì± \1#' \
        -e 's#((kop|head).*)$#üéß \1#' \
        -e 's#(.*toggle-bluetooth.*)$#Û∞§Å   \1#' \
        -e 's#(.*manager)$#üìü \1#' \
        -e 's#(----.*)$#   \1#' \
    | rofi -dmenu -lines "${#bluetoothdevices[@]}" -p "Connect to Bluetooth Device" -i -markup-rows \
        -select "kop" -format i)"
[[ "$deviceidx" ]] || exit
device="${bluetoothdevices[deviceidx]}"

case $device in
    "App xxx toggle-bluetooth") toggle_bluetooth ;;
    "App xxx blueman-manager") blueman-manager ;;
    "x x ----------") exit ;;
    *)
        command=$([ "$(echo "$device" | cut -d " " -f 4)" = "yes" ] && echo "disconnect" || echo "connect")
        bluetoothctl "$command" "$(echo "$device" | cut -d " " -f 2)"
        ;;
esac
